<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnaddress.github.io/news/article-92727.htm" />
    <meta charset="utf-8">
    <!-- Always force latest IE rendering engine -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>你还不知道责任链模式的使用场景吗</title>
        <meta name="description" content="概述 在代码中我们经常会有if…else…判断，一个条件不满足就进行下一个判断，这种就类似于责任链模式，只不过责任链模式是通过对象来过滤。 场景 在物联网行业中，一个设备会以一定的频率向服务器推送数据" />
        <link rel="icon" href="/assets/website/img/windowsnekoray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN地址分享 推荐免费VPN节点订阅中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnaddress.github.io/news/article-92727.htm" />
    <meta property="og:site_name" content="VPN地址分享 推荐免费VPN节点订阅中文网" />
    <meta property="og:title" content="你还不知道责任链模式的使用场景吗" />
    <meta property="og:image" content="https://vpnaddress.github.io/uploads/20240707/5165f181d1ddbb8985dd29af8202f3d9.webp" />
        <meta property="og:release_date" content="2025-04-10T08:18:20" />
    <meta property="og:updated_time" content="2025-04-10T08:18:20" />
        <meta property="og:description" content="概述 在代码中我们经常会有if…else…判断，一个条件不满足就进行下一个判断，这种就类似于责任链模式，只不过责任链模式是通过对象来过滤。 场景 在物联网行业中，一个设备会以一定的频率向服务器推送数据" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="你还不知道责任链模式的使用场景吗">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- BOOTSTRAP CSS -->
    <link rel="stylesheet" href="/assets/website/css/windowsnekoray/bootstrap.min.css">
    <!-- FONT-AWESOME -->
    <link rel="stylesheet" href="/assets/website/css/windowsnekoray/font-awesome-4.7.0/css/font-awesome.min.css">
    <!-- OWL CAROUSEL -->
    <link href="/assets/website/css/windowsnekoray/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/windowsnekoray/owl.theme.default.min.css" rel="stylesheet">
    <!-- LIGHTBOX -->
    <link rel=" stylesheet" href="/assets/website/css/windowsnekoray/lightbox.css">
    <!--Style CSS file-->
    <link rel=" stylesheet" href="/assets/website/css/windowsnekoray/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-J35WSP1N0P"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-J35WSP1N0P');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ====== Preloader ======  -->
    <div id="loader-wrapper">
        <div id="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>
    <!-- ======End Preloader ======  -->
    <!-- ======START NAVGITION ======  -->
    <nav class="navbar navbar-expand-lg">
        <!-- logo -->
        <a class="navbar-brand" href="/">
                <span>VPN地址分享</span>
                </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText">
            <span class="icon-bar"><i class="fa fa-bars fa-2x"></i></span>
        </button>
        <!--End of Resposive Toggle icon-->
        <div class="collapse navbar-collapse" id="navbarText">
            <!--Main menu navigation list-->
            <ul class="navbar-nav ml-auto line">
                                <li class="nav-item">
                    <a class="nav-link" href="/">首页</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/free-nodes/">免费节点</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/news/">新闻资讯</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/client.htm">客户端</a>
                </li>
                            </ul>
            <!--End of Main menu navigation list-->
        </div>
        <!--End of resposive collapse class-->
    </nav>
    <!-- ====== END NAVGITION ======  -->
    <!-- =======START HEADER=========== -->
    <header class="home list" id="home" data-scroll-index="0">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 home-content mt-md-5 mt-sm-5">
                    <h2 class="heading-tertiary mt-3 mb-3">
                        你还不知道责任链模式的使用场景吗                    </h2>
                    <p class="mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </header>
    <!-- ====== END HEADER ======  -->
    <!-- Scroll to Top -->
    <div id="scroll-to-top"><i class="fa fa-arrow-up fa-fw"></i></div>
    <!-- ====== START ABOUT ======  -->
    <section class="about padding" id="about" data-scroll-index="1">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<h2 id="概述">概述</h2> <p>在代码中我们经常会有if…else…判断，一个条件不满足就进行下一个判断，这种就类似于责任链模式，只不过责任链模式是通过对象来过滤。</p> <h2 id="场景">场景</h2> <p>在物联网行业中，一个设备会以一定的频率向服务器推送数据，方便服务器对机器进行一个数据采集和监控，这个数据的类型是多种多样的。例如娃娃机来说：会有设备状态的数据、设备定位的数据、设备报警的数据等等各种数据。每一种类型的数据都由很多个字段组成，例如设备状态数据包含：当前时间、机器号、机器状态（上线、下线、离线），一般都是以二进制的形式进行传输，为了方便就假设设备以JSON的格式上报过来，我接收到数据再进行一个相应的处理。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d9d3faf9c9bc16fd08f3ddf773ad8082.jpg" alt="你还不知道责任链模式的使用场景吗"></p> <h2 id="普通的代码实现">普通的代码实现</h2> <p>首先能想到的就是利用if…else…，如果是设备报警的数据我就使用设备报警处理器处理，超简单的，开始编码～</p> <p>1、实体类</p> <p>DeviceAlarm类</p> <pre><code class="language-java">package com.ylc.model;  import lombok.Data;  /**  * 设备状态实体类  * @author yanglingcong  * @date 2022/4/20 21:08  */ @Data public class DeviceStatus {       /**      * 更新时间      */     private  long updateTime;      /**      * 状态      * 0 未准备      * 1 准备      * 2 正常运行      * 3 异常      */     private Integer state;      /**      * 数据类型      */     private String type;  }</code></pre> <p>DeviceGps类</p> <pre><code class="language-java">/**  * 设备GPS实体类  *  * @author yanglingcong  * @date 2022/4/20 21:08  */ @Data public class DeviceGps {      /**      * 经度      */     private Float longitude;      /**      * 纬度      */     private Float latitude;       /**      * 水平分量精度因子:      */     private Float hdop;  }</code></pre> <p>DeviceAlarm类</p> <pre><code class="language-java">package com.ylc.model;  import lombok.Data;  /**  * 设备报警实体类  *  * @author yanglingcong  * @date 2022/4/20 21:08  */ @Data public class DeviceAlarm {      /**      * 报警消息      */     private String alarmMsg;      /**      * 报警状态      */     private Integer alarmStatus; }</code></pre> <p>2、消息的枚举类型</p> <pre><code class="language-java">package com.ylc.model;  import lombok.Getter;  /**  * 设备消息枚举类型  * @author yanglingcong  * @date 2022/4/20 21:08  */ @Getter public enum eventEnum {      STATUS("10001"),      ALARM("10002"),      GPS("10003");      private String code;      eventEnum(String code){         this.code=code;     } }</code></pre> <p>3、事件接口</p> <pre><code class="language-java">/**  * 处理器接口  * @author yanglingcong  * @date 2022/4/19 22:59  */ public interface AbstractHandler {      String getEventType();      void handle(JSONObject jsonObject);  }</code></pre> <p>3、事件处理</p> <p>DeviceAlarmEvent</p> <pre><code class="language-java">/**  * 设备报警事件  * @author yanglingcong  * @date 2022/4/19 22:59  */ @Slf4j @Component public class DeviceAlarmEvent   implements  AbstractHandler{      @Override     public String getEventType() {         return eventEnum.ALARM.getCode();     }      @Override     public void handle(JSONObject jsonObject) {         DeviceAlarm deviceAlarm = jsonObject.toJavaObject(DeviceAlarm.class);         log.info("设备报警事件被处理");         //业务处理.....     } }</code></pre> <p>DeviceGpsEvent</p> <pre><code class="language-java">/**  * 设备定位事件  * @author yanglingcong  * @date 2022/4/19 22:59  */ @Component @Slf4j public class DeviceGpsEvent implements AbstractHandler{      @Override     public String getEventType() {         return eventEnum.GPS.getCode();     }      @Override     public void handle(JSONObject jsonObject) {         DeviceGps deviceGps = jsonObject.toJavaObject(DeviceGps.class);         //业务处理.....         log.info("设备定位事件被处理");     } }</code></pre> <p>DeviceStatusEvent</p> <pre><code class="language-java">/**  * 设备状态事件  * @author yanglingcong  * @date 2022/4/19 22:59  */ @Slf4j @Component public class DeviceStatusEvent implements  AbstractHandler{      @Override     public String getEventType() {         return eventEnum.STATUS.getCode();     }      @Override     public   void  handle(JSONObject jsonObject){         DeviceStatus deviceStatus = jsonObject.toJavaObject(DeviceStatus.class);         //业务处理.....         log.info("设备状态事件被处理");     } }</code></pre> <p>4、消息分发中心</p> <pre><code class="language-java">package com.ylc.handle;  import com.alibaba.fastjson.JSONObject; import com.ylc.model.eventEnum; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component;  /**  * 数据事件处理类  * @author yanglingcong  */ @Slf4j @Component public class PushEvent {      /**      * 数据分发到对应的事件处理      */     public void dispatch(JSONObject jsonObject){         String code = (String) jsonObject.get("type");         //如果是设备状态数据         if(code.equals(eventEnum.STATUS.getCode())){             log.info("开始处理设备状态数据");             DeviceStatusEvent statusEvent=new DeviceStatusEvent();             statusEvent.handle(jsonObject);         }         //如果是设备定位数据         else if(code.equals(eventEnum.GPS.getCode())){             log.info("开始处理设备定位数据");             DeviceGpsEvent deviceGpsEvent=new DeviceGpsEvent();             deviceGpsEvent.handle(jsonObject);         }         //如果是设备报警数据         else if(code.equals(eventEnum.ALARM.getCode())){             log.info("开始处理设备定位数据");             DeviceStatusEvent statusEvent=new DeviceStatusEvent();             statusEvent.handle(jsonObject);         }     }  }</code></pre> <p>6、测试</p> <pre><code class="language-java">@Slf4j public class MessageHandleTest {      @Test     public void  testDeviceStatus(){         DeviceStatus deviceStatus=new DeviceStatus();         deviceStatus.setType(eventEnum.STATUS.getCode());         deviceStatus.setUpdateTime(1653532367);         deviceStatus.setState(1);         JSONObject jsonObject= JSON.parseObject(JSONObject.toJSONString(deviceStatus));         PushEvent pushEvent=new PushEvent();         log.info("开始分发消息:{}",deviceStatus.toString());         pushEvent.dispatch(jsonObject);     }  }</code></pre> <p>运行结果</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9f941aef0c34c352127a735c6d32b09a.jpg" alt="你还不知道责任链模式的使用场景吗"></p> <p>但是这样会有很多问题，如果还有其他类型的数据那么又要增加判断，这个条件判定的顺序也是写死的，非常不灵活，接下来用责任链模式进行优化</p> <h2 id="责任链实现">责任链实现</h2> <p>1、实体类 略</p> <p>2、事件处理 略</p> <p>3、消息分发中心</p> <pre><code class="language-java">package com.ylc.handle;  import com.alibaba.fastjson.JSONObject; import lombok.extern.slf4j.Slf4j; import lombok.var; import org.springframework.beans.BeansException; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.ApplicationContext; import org.springframework.context.ApplicationContextAware; import org.springframework.context.annotation.DependsOn; import org.springframework.stereotype.Component;  import javax.annotation.Resource; import java.util.Collection; import java.util.Comparator; import java.util.List; import java.util.Map; import java.util.stream.Collectors;   /**  * 数据事件处理类  * @author yanglingcong  */ @Slf4j @Component public class PushEvent implements ApplicationContextAware {       /**      * 实现类集合      * */     private Map&lt;String, List&lt;AbstractHandler&gt;&gt; routerMap;      @Autowired     ApplicationContext applicationContext;      @Override     public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {         this.routerMap =applicationContext.getBeansOfType(AbstractHandler.class).values()                 .stream().collect(Collectors.groupingBy(AbstractHandler::getEventType));     }      /**      * 数据分发到对应的事件处理      */     public void dispatch(JSONObject jsonObject){         String code = (String) jsonObject.get("type");         List&lt;AbstractHandler&gt; pushEventHandlers= this.routerMap.get(code);         for (AbstractHandler pushEventHandler : pushEventHandlers) {             log.info("开始处理{}事件",pushEventHandler.getEventType());             pushEventHandler.handle(jsonObject);         }     } }</code></pre> <p>4、测试</p> <pre><code class="language-java">package com.ylc;  import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.JSONObject; import com.ylc.handle.AbstractHandler; import com.ylc.handle.PushEvent; import com.ylc.model.DeviceStatus; import com.ylc.model.eventEnum; import lombok.extern.slf4j.Slf4j; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.boot.test.context.SpringBootTest; import org.springframework.test.context.junit4.SpringRunner;  import java.util.List;  @Slf4j @RunWith(SpringRunner.class) @SpringBootTest public class MessageHandleTest {      @Autowired     PushEvent pushEvent;      @Test     public void  testDeviceStatus(){         DeviceStatus deviceStatus=new DeviceStatus();         deviceStatus.setType(eventEnum.STATUS.getCode());         deviceStatus.setUpdateTime(1653532367);         deviceStatus.setState(1);         JSONObject jsonObject= JSON.parseObject(JSONObject.toJSONString(deviceStatus));         log.info("开始分发消息:{}",deviceStatus.toString());         pushEvent.dispatch(jsonObject);     }  }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b511295a6d1e1b1d64d8f0c866590ab5.jpg" alt="你还不知道责任链模式的使用场景吗"></p> <ul> <li>如果有新的设备消息类型，只需要加一个新的事件处理类，其他代码不用变化，这样符合开放封闭原则还有单一原则，也增加了程序的灵活性。</li> <li>具体使用到哪个类型也不需要我们自己，交给程序运行时处理</li> <li>使用Map集合的方式，直接从集合里面根据特征找到对应的处理器，跟其他博客设置使用下一个处理者进行判断的方法类似，如果链条比较长那么使用下一个处理者方法不合适，需要从头遍历到尾部。</li> <li>还可以控制请求顺序，集合的话通过增加一个排序字段</li> </ul> <h2 id="总结">总结</h2> <p>责任链模式其实就是灵活的if..else..语句，将多个处理者连接成一条链。 接收到请求后， 它会 “询问” 每个处理者是否能够对其进行处理。 这样所有处理者都有机会来处理请求</p> <p><strong>使用场景</strong></p> <ul> <li><strong>当必须按顺序执行多个处理者时，可以使用该模式</strong></li> <li><strong>如果所需处理者及其顺序必须在运行时进行改变， 可以使用责任链模式</strong></li> <li><strong>当程序需要使用不同方式处理不同种类请求，而且请求类型和顺序预先未知时，可以使用责任链模式</strong></li> </ul> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-92726.htm">liunx中搭建python3.7环境和安装pycharm并搭建Django</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-87571.htm" title="动物疫苗证在哪里办理 动物疫苗证在哪里办理的">动物疫苗证在哪里办理 动物疫苗证在哪里办理的</a></li>
                        <li class="py-2"><a href="/news/article-91022.htm" title="销售动物疫苗免增值税么为什么不能抵扣（动物疫苗好卖吗）">销售动物疫苗免增值税么为什么不能抵扣（动物疫苗好卖吗）</a></li>
                        <li class="py-2"><a href="/news/article-86851.htm" title="动物防疫疫苗种类有哪些品种的（动物疫苗种类及类型）">动物防疫疫苗种类有哪些品种的（动物疫苗种类及类型）</a></li>
                        <li class="py-2"><a href="/news/article-81860.htm" title="CentOS 8迁移Rocky Linux 8手记_在线工具">CentOS 8迁移Rocky Linux 8手记_在线工具</a></li>
                        <li class="py-2"><a href="/news/article-80462.htm" title="动物医院诊疗范围包括哪些 动物医院怎么样">动物医院诊疗范围包括哪些 动物医院怎么样</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-free-v2ray-subscribe.htm" title="VPN地址分享 | 4月4日20.6M/S|免费V2ray/SSR/Shadowrocket/Clash订阅节点地址">VPN地址分享 | 4月4日20.6M/S|免费V2ray/SSR/Shadowrocket/Clash订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-89753.htm" title="宠物哪里可以领养（宠物在哪可以领养）">宠物哪里可以领养（宠物在哪可以领养）</a></li>
                        <li class="py-2"><a href="/news/article-90508.htm" title="猫抓伤了表皮出了一点血,过了2天（猫抓了一下出了点血伤口有点红）">猫抓伤了表皮出了一点血,过了2天（猫抓了一下出了点血伤口有点红）</a></li>
                        <li class="py-2"><a href="/news/article-84706.htm" title="参观动物医院的心得体会300字（参观动物园心得）">参观动物医院的心得体会300字（参观动物园心得）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-9-node-share.htm" title="VPN地址分享 | 4月9日18.2M/S|免费Shadowrocket/V2ray/SSR/Clash订阅节点地址">VPN地址分享 | 4月9日18.2M/S|免费Shadowrocket/V2ray/SSR/Clash订阅节点地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">41</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ====== END ABOUT======  -->
        <!-- ====== START FOOTER ======  -->
    <section class="footer">
        <div class="container">
            <div class="row">
                <!-- START FOOTER BOTTOM -->
                <div class="offset-md-3 col-md-6 offset-md-3">
                    <!-- START RIGHTS -->
                    <div class="copyright">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p>VPN地址分享 推荐免费VPN节点订阅中文网 版权所有</p>
                        <p>Powered by WordPress</p>
                    </div>
                    <!-- END RIGHTS -->
                </div>
                <!-- END FOOTER BOTTOM -->
            </div>
        </div>
    </section>
    <!-- ====== END FOOTER ======  -->
    <!-- ====== JS ======  -->
    <!--jquery-3.3.1 js-->
    <script src="/assets/website/js/frontend/windowsnekoray/jquery-3.3.1.min.js"></script>
    <!-- popper js -->
    <script src="/assets/website/js/frontend/windowsnekoray/popper.min.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/windowsnekoray/bootstrap.min.js"></script>
    <!-- scrollIt js -->
    <script src="/assets/website/js/frontend/windowsnekoray/scrollIt.min.js"></script>
    <!-- countTo js -->
    <script src="/assets/website/js/frontend/windowsnekoray/jquery.countTo.js"></script>
    <!-- filter js -->
    <script src="/assets/website/js/frontend/windowsnekoray/jquery.filterizr.min.js"></script>
    <!-- waypoints js -->
    <script src="/assets/website/js/frontend/windowsnekoray/waypoints.min.js"></script>
    <!-- owl carousel js -->
    <script src="/assets/website/js/frontend/windowsnekoray/owl.carousel.min.js"></script>
    <!-- validator js -->
    <script src="/assets/website/js/frontend/windowsnekoray/validator.js"></script>
    <!-- coustom js -->
    <script src="/assets/website/js/frontend/windowsnekoray/main.js"></script>
    <!-- lightbox js -->
    <script src="/assets/website/js/frontend/windowsnekoray/lightbox.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>